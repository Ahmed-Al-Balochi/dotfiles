//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29288209
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_35, texmode_independent
.address_size 64

	// .globl	DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan
.const .align 8 .b8 __internal_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.entry DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan(
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3
)
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<128>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<132>;
	.reg .f64 	%fd<596>;
	.reg .b64 	%rd<131>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd48, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1];
	ld.param.u64 	%rd49, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2];
	ld.param.u64 	%rd50, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r36, %ctaid.x;
	mov.u32 	%r37, %ntid.x;
	mov.b32	%r38, %envreg3;
	mad.lo.s32 	%r39, %r36, %r37, %r38;
	mov.u32 	%r40, %tid.x;
	add.s32 	%r1, %r39, %r40;
	cvt.s64.s32	%rd2, %r1;
	mul.wide.s32 	%rd52, %r1, 8;
	add.s64 	%rd3, %rd50, %rd52;
	mov.f64 	%fd572, 0d7FFFFFFFE0000000;
	setp.gt.s32	%p1, %r1, 4;
	mov.f64 	%fd571, %fd572;
	@%p1 bra 	BB0_2;

	ld.global.f64 	%fd571, [%rd3];

BB0_2:
	@%p1 bra 	BB0_4;

	ld.global.f64 	%fd572, [%rd3];

BB0_4:
	abs.f64 	%fd87, %fd572;
	setp.gtu.f64	%p3, %fd87, 0d7FF0000000000000;
	cvt.u32.u64	%r2, %rd2;
	setp.gt.s32	%p4, %r2, 4;
	or.pred  	%p5, %p3, %p4;
	selp.f64	%fd5, 0d0000000000000000, %fd571, %p5;
	abs.f64 	%fd6, %fd5;
	setp.leu.f64	%p6, %fd6, 0d3FF0000000000000;
	mov.f64 	%fd573, %fd6;
	@%p6 bra 	BB0_6;

	// inline asm
	rcp.approx.ftz.f64 %fd88,%fd6;
	// inline asm
	neg.f64 	%fd90, %fd6;
	mov.f64 	%fd91, 0d3FF0000000000000;
	fma.rn.f64 	%fd92, %fd90, %fd88, %fd91;
	fma.rn.f64 	%fd93, %fd92, %fd92, %fd92;
	fma.rn.f64 	%fd94, %fd93, %fd88, %fd88;
	setp.eq.f64	%p7, %fd6, 0d7FF0000000000000;
	selp.f64	%fd573, 0d0000000000000000, %fd94, %p7;

BB0_6:
	mul.f64 	%fd96, %fd573, %fd573;
	mov.f64 	%fd97, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd98, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd99, %fd98, %fd96, %fd97;
	mov.f64 	%fd100, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd101, %fd99, %fd96, %fd100;
	mov.f64 	%fd102, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd103, %fd101, %fd96, %fd102;
	mov.f64 	%fd104, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd105, %fd103, %fd96, %fd104;
	mov.f64 	%fd106, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd107, %fd105, %fd96, %fd106;
	mov.f64 	%fd108, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd109, %fd107, %fd96, %fd108;
	mov.f64 	%fd110, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd111, %fd109, %fd96, %fd110;
	mov.f64 	%fd112, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd113, %fd111, %fd96, %fd112;
	mov.f64 	%fd114, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd115, %fd113, %fd96, %fd114;
	mov.f64 	%fd116, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd117, %fd115, %fd96, %fd116;
	mov.f64 	%fd118, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd119, %fd117, %fd96, %fd118;
	mov.f64 	%fd120, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd121, %fd119, %fd96, %fd120;
	mov.f64 	%fd122, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd123, %fd121, %fd96, %fd122;
	mov.f64 	%fd124, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd125, %fd123, %fd96, %fd124;
	mov.f64 	%fd126, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd127, %fd125, %fd96, %fd126;
	mov.f64 	%fd128, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd129, %fd127, %fd96, %fd128;
	mov.f64 	%fd130, 0d3FC99999999840D2;
	fma.rn.f64 	%fd131, %fd129, %fd96, %fd130;
	mov.f64 	%fd132, 0dBFD555555555544C;
	fma.rn.f64 	%fd133, %fd131, %fd96, %fd132;
	mul.f64 	%fd134, %fd96, %fd133;
	fma.rn.f64 	%fd135, %fd134, %fd573, %fd573;
	mov.f64 	%fd136, 0d3FF921FB54442D18;
	sub.f64 	%fd137, %fd136, %fd135;
	setp.gt.f64	%p8, %fd6, 0d3FF0000000000000;
	selp.f64	%fd138, %fd137, %fd135, %p8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r41, %temp}, %fd138;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd138;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r43}, %fd5;
	}
	and.b32  	%r44, %r43, -2147483648;
	or.b32  	%r45, %r42, %r44;
	mov.b64 	%fd9, {%r41, %r45};
	add.s64 	%rd4, %rd49, %rd52;
	mov.f64 	%fd575, 0d7FFFFFFFE0000000;
	mov.f64 	%fd574, %fd575;
	@%p1 bra 	BB0_8;

	ld.global.f64 	%fd574, [%rd4];

BB0_8:
	@%p1 bra 	BB0_10;

	ld.global.f64 	%fd575, [%rd4];

BB0_10:
	abs.f64 	%fd141, %fd575;
	setp.gtu.f64	%p11, %fd141, 0d7FF0000000000000;
	or.pred  	%p13, %p11, %p4;
	selp.f64	%fd14, 0d0000000000000000, %fd574, %p13;
	abs.f64 	%fd15, %fd14;
	setp.eq.f64	%p14, %fd15, 0d7FF0000000000000;
	mov.f64 	%fd578, 0dFFF8000000000000;
	@%p14 bra 	BB0_30;

	setp.gt.f64	%p15, %fd15, 0d41E0000000000000;
	@%p15 bra 	BB0_13;
	bra.uni 	BB0_12;

BB0_13:
	mov.b64 	 %rd5, %fd14;
	and.b64  	%rd6, %rd5, -9223372036854775808;
	shr.u64 	%rd7, %rd5, 52;
	bfe.u64 	%rd55, %rd5, 52, 11;
	add.s64 	%rd56, %rd55, 4294966272;
	cvt.u32.u64	%r4, %rd56;
	shr.u32 	%r47, %r4, 6;
	mov.u32 	%r48, 15;
	sub.s32 	%r5, %r48, %r47;
	mov.u32 	%r49, 19;
	sub.s32 	%r50, %r49, %r47;
	mov.u32 	%r51, 18;
	min.s32 	%r6, %r51, %r50;
	mov.u64 	%rd120, 0;
	setp.ge.s32	%p16, %r5, %r6;
	mov.u64 	%rd119, %rd1;
	@%p16 bra 	BB0_16;

	shl.b64 	%rd58, %rd5, 11;
	or.b64  	%rd9, %rd58, -9223372036854775808;
	cvt.u32.u64	%r52, %rd7;
	and.b32  	%r53, %r52, 2047;
	add.s32 	%r54, %r53, -1024;
	shr.u32 	%r55, %r54, 6;
	neg.s32 	%r56, %r55;
	mul.wide.s32 	%rd60, %r56, 8;
	mov.u64 	%rd61, __internal_i2opi_d;
	add.s64 	%rd62, %rd60, %rd61;
	add.s64 	%rd116, %rd62, 120;
	mov.u64 	%rd120, 0;
	mov.u64 	%rd119, %rd1;
	mov.u32 	%r122, %r5;

BB0_15:
	.pragma "nounroll";
	ld.const.u64 	%rd63, [%rd116];
	mul.lo.s64 	%rd64, %rd63, %rd9;
	mul.hi.u64 	%rd65, %rd63, %rd9;
	add.s64 	%rd66, %rd120, %rd64;
	setp.lt.u64	%p17, %rd66, %rd120;
	selp.u64	%rd67, 1, 0, %p17;
	add.s64 	%rd120, %rd67, %rd65;
	st.local.u64 	[%rd119], %rd66;
	add.s32 	%r122, %r122, 1;
	sub.s32 	%r57, %r122, %r5;
	mul.wide.s32 	%rd68, %r57, 8;
	add.s64 	%rd119, %rd1, %rd68;
	add.s64 	%rd116, %rd116, 8;
	setp.lt.s32	%p18, %r122, %r6;
	@%p18 bra 	BB0_15;

BB0_16:
	st.local.u64 	[%rd119], %rd120;
	ld.local.u64 	%rd121, [%rd1+24];
	ld.local.u64 	%rd122, [%rd1+16];
	and.b32  	%r58, %r4, 63;
	setp.eq.s32	%p19, %r58, 0;
	@%p19 bra 	BB0_18;

	cvt.u32.u64	%r59, %rd7;
	and.b32  	%r60, %r59, 63;
	shl.b64 	%rd69, %rd121, %r60;
	neg.s64 	%rd70, %rd7;
	cvt.u32.u64	%r61, %rd70;
	and.b32  	%r62, %r61, 63;
	shr.u64 	%rd71, %rd122, %r62;
	or.b64  	%rd121, %rd71, %rd69;
	shl.b64 	%rd72, %rd122, %r60;
	ld.local.u64 	%rd73, [%rd1+8];
	shr.u64 	%rd74, %rd73, %r62;
	or.b64  	%rd122, %rd74, %rd72;

BB0_18:
	shr.u64 	%rd75, %rd121, 62;
	cvt.u32.u64	%r63, %rd75;
	shr.u64 	%rd76, %rd122, 62;
	shl.b64 	%rd77, %rd121, 2;
	or.b64  	%rd128, %rd76, %rd77;
	shl.b64 	%rd28, %rd122, 2;
	setp.ne.s64	%p20, %rd28, 0;
	selp.u64	%rd78, 1, 0, %p20;
	or.b64  	%rd79, %rd78, %rd128;
	setp.gt.u64	%p21, %rd79, -9223372036854775808;
	selp.u32	%r64, 1, 0, %p21;
	add.s32 	%r9, %r64, %r63;
	setp.lt.u64	%p22, %rd79, -9223372036854775807;
	@%p22 bra 	BB0_19;

	not.b64 	%rd80, %rd128;
	neg.s64 	%rd125, %rd28;
	setp.eq.s64	%p23, %rd28, 0;
	selp.u64	%rd81, 1, 0, %p23;
	add.s64 	%rd128, %rd81, %rd80;
	xor.b64  	%rd124, %rd6, -9223372036854775808;
	bra.uni 	BB0_21;

BB0_12:
	mov.f64 	%fd155, 0d3FE45F306DC9C883;
	mul.rn.f64 	%fd142, %fd14, %fd155;
	// inline asm
	cvt.rni.s32.f64 	%r126, %fd142;
	// inline asm
	cvt.rn.f64.s32	%fd156, %r126;
	neg.f64 	%fd152, %fd156;
	// inline asm
	fma.rn.f64 	%fd143, %fd152, %fd136, %fd14;
	// inline asm
	mov.f64 	%fd149, 0d3C91A62633145C00;
	// inline asm
	fma.rn.f64 	%fd147, %fd152, %fd149, %fd143;
	// inline asm
	mov.f64 	%fd153, 0d397B839A252049C0;
	// inline asm
	fma.rn.f64 	%fd576, %fd152, %fd153, %fd147;
	// inline asm
	bra.uni 	BB0_26;

BB0_19:
	mov.u64 	%rd124, %rd6;
	mov.u64 	%rd125, %rd28;

BB0_21:
	setp.eq.s64	%p24, %rd6, 0;
	neg.s32 	%r67, %r9;
	mov.u32 	%r124, 0;
	selp.b32	%r126, %r9, %r67, %p24;
	setp.lt.s64	%p25, %rd128, 1;
	@%p25 bra 	BB0_23;

BB0_22:
	shr.u64 	%rd82, %rd125, 63;
	shl.b64 	%rd83, %rd128, 1;
	or.b64  	%rd128, %rd82, %rd83;
	shl.b64 	%rd125, %rd125, 1;
	add.s32 	%r124, %r124, -1;
	setp.gt.s64	%p26, %rd128, 0;
	@%p26 bra 	BB0_22;

BB0_23:
	mul.lo.s64 	%rd130, %rd128, -3958705157555305931;
	mov.u64 	%rd84, -3958705157555305931;
	mul.hi.u64 	%rd129, %rd128, %rd84;
	setp.lt.s64	%p27, %rd129, 1;
	@%p27 bra 	BB0_25;

	shl.b64 	%rd85, %rd129, 1;
	shr.u64 	%rd86, %rd130, 63;
	or.b64  	%rd129, %rd85, %rd86;
	mul.lo.s64 	%rd130, %rd128, -7917410315110611862;
	add.s32 	%r124, %r124, -1;

BB0_25:
	setp.ne.s64	%p28, %rd130, 0;
	selp.u64	%rd87, 1, 0, %p28;
	add.s64 	%rd88, %rd87, %rd129;
	add.s32 	%r68, %r124, 1022;
	cvt.u64.u32	%rd89, %r68;
	shl.b64 	%rd90, %rd89, 52;
	shr.u64 	%rd91, %rd88, 11;
	add.s64 	%rd92, %rd90, %rd91;
	bfe.u64 	%rd93, %rd88, 10, 1;
	add.s64 	%rd94, %rd92, %rd93;
	or.b64  	%rd95, %rd94, %rd124;
	mov.b64 	 %fd576, %rd95;

BB0_26:
	add.s32 	%r17, %r126, 1;
	and.b32  	%r69, %r17, 1;
	setp.eq.b32	%p29, %r69, 1;
	mul.rn.f64 	%fd19, %fd576, %fd576;
	@!%p29 bra 	BB0_28;
	bra.uni 	BB0_27;

BB0_27:
	mov.f64 	%fd158, 0dBDA8FF8D5A8F03DB;
	mov.f64 	%fd160, 0d3E21EEA7D67FAD92;
	// inline asm
	fma.rn.f64 	%fd157, %fd158, %fd19, %fd160;
	// inline asm
	mov.f64 	%fd164, 0dBE927E4F8E26B8E3;
	// inline asm
	fma.rn.f64 	%fd161, %fd157, %fd19, %fd164;
	// inline asm
	mov.f64 	%fd168, 0d3EFA01A019DDEC33;
	// inline asm
	fma.rn.f64 	%fd165, %fd161, %fd19, %fd168;
	// inline asm
	mov.f64 	%fd172, 0dBF56C16C16C15D69;
	// inline asm
	fma.rn.f64 	%fd169, %fd165, %fd19, %fd172;
	// inline asm
	mov.f64 	%fd176, 0d3FA5555555555551;
	// inline asm
	fma.rn.f64 	%fd173, %fd169, %fd19, %fd176;
	// inline asm
	mov.f64 	%fd180, 0dBFE0000000000000;
	// inline asm
	fma.rn.f64 	%fd177, %fd173, %fd19, %fd180;
	// inline asm
	mov.f64 	%fd184, 0d3FF0000000000000;
	// inline asm
	fma.rn.f64 	%fd577, %fd177, %fd19, %fd184;
	// inline asm
	bra.uni 	BB0_29;

BB0_28:
	mov.f64 	%fd186, 0d3DE5D8FD1FCF0EC1;
	mov.f64 	%fd188, 0dBE5AE5E5A9291691;
	// inline asm
	fma.rn.f64 	%fd185, %fd186, %fd19, %fd188;
	// inline asm
	mov.f64 	%fd192, 0d3EC71DE3567D4896;
	// inline asm
	fma.rn.f64 	%fd189, %fd185, %fd19, %fd192;
	// inline asm
	mov.f64 	%fd196, 0dBF2A01A019BFDF03;
	// inline asm
	fma.rn.f64 	%fd193, %fd189, %fd19, %fd196;
	// inline asm
	mov.f64 	%fd200, 0d3F8111111110F7D0;
	// inline asm
	fma.rn.f64 	%fd197, %fd193, %fd19, %fd200;
	// inline asm
	mov.f64 	%fd204, 0dBFC5555555555548;
	// inline asm
	fma.rn.f64 	%fd201, %fd197, %fd19, %fd204;
	// inline asm
	mul.rn.f64 	%fd206, %fd201, %fd19;
	// inline asm
	fma.rn.f64 	%fd577, %fd206, %fd576, %fd576;
	// inline asm

BB0_29:
	and.b32  	%r70, %r17, 2;
	setp.eq.s32	%p30, %r70, 0;
	neg.f64 	%fd209, %fd577;
	selp.f64	%fd578, %fd577, %fd209, %p30;

BB0_30:
	add.f64 	%fd25, %fd578, 0d0000000000000000;
	add.s64 	%rd46, %rd48, %rd52;
	mov.f64 	%fd580, 0d7FFFFFFFE0000000;
	mov.f64 	%fd579, %fd580;
	@%p1 bra 	BB0_32;

	ld.global.f64 	%fd211, [%rd46];
	mul.f64 	%fd579, %fd211, 0d3FD45F306DC9C883;

BB0_32:
	@%p1 bra 	BB0_34;

	ld.global.f64 	%fd580, [%rd46];

BB0_34:
	abs.f64 	%fd213, %fd580;
	setp.gtu.f64	%p33, %fd213, 0d7FF0000000000000;
	or.pred  	%p35, %p33, %p4;
	selp.f64	%fd584, 0d0000000000000000, %fd579, %p35;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r71}, %fd584;
	}
	add.s32 	%r18, %r71, %r71;
	setp.lt.u32	%p36, %r18, -2038431743;
	mov.f64 	%fd581, %fd584;
	@%p36 bra 	BB0_36;

	mov.f64 	%fd214, 0d0000000000000000;
	mul.rn.f64 	%fd581, %fd584, %fd214;

BB0_36:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r72}, %fd581;
	}
	add.s32 	%r73, %r72, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %fd581;
	}
	mov.b64 	%fd215, {%r74, %r73};
	cvt.rni.f64.f64	%fd216, %fd215;
	cvt.rzi.s64.f64	%rd97, %fd216;
	cvt.u32.u64	%r75, %rd97;
	neg.f64 	%fd217, %fd216;
	mov.f64 	%fd218, 0d3FE0000000000000;
	fma.rn.f64 	%fd219, %fd217, %fd218, %fd581;
	mul.f64 	%fd220, %fd219, 0d3CA1A62633145C07;
	mov.f64 	%fd221, 0d400921FB54442D18;
	fma.rn.f64 	%fd222, %fd219, %fd221, %fd220;
	mul.rn.f64 	%fd223, %fd222, %fd222;
	mov.f64 	%fd224, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd225, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd226, %fd225, %fd223, %fd224;
	mov.f64 	%fd227, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd228, %fd226, %fd223, %fd227;
	mov.f64 	%fd229, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd230, %fd228, %fd223, %fd229;
	mov.f64 	%fd231, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd232, %fd230, %fd223, %fd231;
	mov.f64 	%fd233, 0d3FA5555555555551;
	fma.rn.f64 	%fd234, %fd232, %fd223, %fd233;
	mov.f64 	%fd235, 0dBFE0000000000000;
	fma.rn.f64 	%fd236, %fd234, %fd223, %fd235;
	mov.f64 	%fd590, 0d3FF0000000000000;
	fma.rn.f64 	%fd238, %fd236, %fd223, %fd590;
	mov.f64 	%fd239, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd240, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd241, %fd240, %fd223, %fd239;
	mov.f64 	%fd242, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd243, %fd241, %fd223, %fd242;
	mov.f64 	%fd244, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd245, %fd243, %fd223, %fd244;
	mov.f64 	%fd246, 0d3F81111111110818;
	fma.rn.f64 	%fd247, %fd245, %fd223, %fd246;
	mov.f64 	%fd248, 0dBFC5555555555554;
	fma.rn.f64 	%fd249, %fd247, %fd223, %fd248;
	mov.f64 	%fd250, 0d0000000000000000;
	fma.rn.f64 	%fd251, %fd249, %fd223, %fd250;
	fma.rn.f64 	%fd252, %fd251, %fd222, %fd222;
	and.b64  	%rd98, %rd97, 1;
	setp.eq.b64	%p37, %rd98, 1;
	not.pred 	%p38, %p37;
	selp.f64	%fd583, %fd252, %fd238, %p38;
	and.b32  	%r76, %r75, 2;
	setp.eq.s32	%p39, %r76, 0;
	@%p39 bra 	BB0_38;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r77}, %fd583;
	}
	xor.b32  	%r78, %r77, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r79, %temp}, %fd583;
	}
	mov.b64 	%fd583, {%r79, %r78};

BB0_38:
	cvt.rzi.f64.f64	%fd253, %fd581;
	setp.neu.f64	%p40, %fd581, %fd253;
	@%p40 bra 	BB0_40;

	mov.f64 	%fd254, 0d0000000000000000;
	mul.rn.f64 	%fd583, %fd581, %fd254;

BB0_40:
	@%p36 bra 	BB0_42;

	mov.f64 	%fd255, 0d0000000000000000;
	mul.rn.f64 	%fd584, %fd584, %fd255;

BB0_42:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r80}, %fd584;
	}
	add.s32 	%r81, %r80, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r82, %temp}, %fd584;
	}
	mov.b64 	%fd256, {%r82, %r81};
	cvt.rni.f64.f64	%fd257, %fd256;
	cvt.rzi.s64.f64	%rd99, %fd257;
	cvt.u32.u64	%r83, %rd99;
	neg.f64 	%fd258, %fd257;
	fma.rn.f64 	%fd260, %fd258, %fd218, %fd584;
	mul.f64 	%fd261, %fd260, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd263, %fd260, %fd221, %fd261;
	mul.rn.f64 	%fd264, %fd263, %fd263;
	fma.rn.f64 	%fd267, %fd225, %fd264, %fd224;
	fma.rn.f64 	%fd269, %fd267, %fd264, %fd227;
	fma.rn.f64 	%fd271, %fd269, %fd264, %fd229;
	fma.rn.f64 	%fd273, %fd271, %fd264, %fd231;
	fma.rn.f64 	%fd275, %fd273, %fd264, %fd233;
	fma.rn.f64 	%fd277, %fd275, %fd264, %fd235;
	fma.rn.f64 	%fd279, %fd277, %fd264, %fd590;
	fma.rn.f64 	%fd282, %fd240, %fd264, %fd239;
	fma.rn.f64 	%fd284, %fd282, %fd264, %fd242;
	fma.rn.f64 	%fd286, %fd284, %fd264, %fd244;
	fma.rn.f64 	%fd288, %fd286, %fd264, %fd246;
	fma.rn.f64 	%fd290, %fd288, %fd264, %fd248;
	fma.rn.f64 	%fd292, %fd290, %fd264, %fd250;
	fma.rn.f64 	%fd293, %fd292, %fd263, %fd263;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r84}, %fd293;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r85, %temp}, %fd293;
	}
	xor.b32  	%r86, %r84, -2147483648;
	mov.b64 	%fd294, {%r85, %r86};
	and.b64  	%rd100, %rd99, 1;
	setp.eq.b64	%p42, %rd100, 1;
	not.pred 	%p43, %p42;
	selp.f64	%fd585, %fd279, %fd294, %p43;
	and.b32  	%r87, %r83, 2;
	setp.eq.s32	%p44, %r87, 0;
	@%p44 bra 	BB0_44;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r88}, %fd585;
	}
	xor.b32  	%r89, %r88, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r90, %temp}, %fd585;
	}
	mov.b64 	%fd585, {%r90, %r89};

BB0_44:
	fma.rn.f64 	%fd43, %fd585, %fd590, %fd250;
	setp.eq.f64	%p45, %fd43, 0d3FF0000000000000;
	@%p45 bra 	BB0_70;

	abs.f64 	%fd44, %fd43;
	setp.gtu.f64	%p46, %fd44, 0d7FF0000000000000;
	@%p46 bra 	BB0_69;
	bra.uni 	BB0_46;

BB0_69:
	add.f64 	%fd590, %fd43, 0dBFF0000000000000;
	bra.uni 	BB0_70;

BB0_46:
	setp.eq.f64	%p47, %fd43, 0d7FF0000000000000;
	@%p47 bra 	BB0_68;
	bra.uni 	BB0_47;

BB0_68:
	mov.f64 	%fd487, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r111}, %fd487;
	}
	setp.gt.s32	%p64, %r111, -1;
	selp.f64	%fd590, 0d7FF0000000000000, 0d0000000000000000, %p64;
	bra.uni 	BB0_70;

BB0_47:
	mov.f64 	%fd297, 0dBFF0000000000000;
	mul.rn.f64 	%fd299, %fd218, %fd297;
	cvt.rzi.f64.f64	%fd300, %fd299;
	mov.f64 	%fd301, 0d4000000000000000;
	mul.rn.f64 	%fd302, %fd301, %fd300;
	sub.f64 	%fd303, %fd297, %fd302;
	abs.f64 	%fd45, %fd303;
	setp.eq.f64	%p48, %fd43, 0d0000000000000000;
	@%p48 bra 	BB0_67;
	bra.uni 	BB0_48;

BB0_67:
	setp.eq.f64	%p63, %fd45, 0d3FF0000000000000;
	rcp.rn.f64 	%fd484, %fd43;
	rcp.rn.f64 	%fd486, %fd250;
	selp.f64	%fd590, %fd484, %fd486, %p63;
	bra.uni 	BB0_70;

BB0_48:
	setp.eq.f64	%p49, %fd43, 0dFFF0000000000000;
	@%p49 bra 	BB0_65;
	bra.uni 	BB0_49;

BB0_65:
	div.rn.f64 	%fd590, %fd297, %fd43;
	setp.neu.f64	%p62, %fd45, 0d3FF0000000000000;
	@%p62 bra 	BB0_70;

	mov.b64 	 %rd103, %fd590;
	xor.b64  	%rd104, %rd103, -9223372036854775808;
	mov.b64 	 %fd590, %rd104;
	bra.uni 	BB0_70;

BB0_49:
	setp.geu.f64	%p50, %fd43, 0d0000000000000000;
	@%p50 bra 	BB0_51;

	cvt.rzi.f64.f64	%fd306, %fd297;
	setp.neu.f64	%p51, %fd306, 0dBFF0000000000000;
	mov.f64 	%fd590, 0dFFF8000000000000;
	@%p51 bra 	BB0_70;

BB0_51:
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r128}, %fd44; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r127, hi}, %fd44; 
	}
	// inline asm
	bfe.u32 	%r129, %r128, 20, 11;
	setp.ne.s32	%p52, %r129, 0;
	@%p52 bra 	BB0_53;

	mov.f64 	%fd311, 0d4350000000000000;
	mul.rn.f64 	%fd310, %fd44, %fd311;
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r128}, %fd310; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r127, hi}, %fd310; 
	}
	// inline asm
	bfe.u32 	%r95, %r128, 20, 11;
	add.s32 	%r129, %r95, -54;

BB0_53:
	add.s32 	%r130, %r129, -1023;
	and.b32  	%r98, %r128, -2146435073;
	or.b32  	%r97, %r98, 1072693248;
	// inline asm
	mov.b64 	%fd586, {%r127, %r97};
	// inline asm
	setp.lt.u32	%p53, %r97, 1073127583;
	@%p53 bra 	BB0_55;

	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r99, hi}, %fd586; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r100}, %fd586; 
	}
	// inline asm
	add.s32 	%r102, %r100, -1048576;
	// inline asm
	mov.b64 	%fd586, {%r99, %r102};
	// inline asm
	add.s32 	%r130, %r129, -1022;

BB0_55:
	add.f64 	%fd400, %fd586, 0d3FF0000000000000;
	rcp.rn.f64 	%fd401, %fd400;
	add.f64 	%fd342, %fd586, 0dBFF0000000000000;
	mul.rn.f64 	%fd402, %fd342, %fd401;
	add.f64 	%fd390, %fd402, %fd402;
	mul.rn.f64 	%fd338, %fd390, %fd390;
	mov.f64 	%fd317, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd319, 0d3ED0F5D241AD3B5A;
	// inline asm
	fma.rn.f64 	%fd316, %fd317, %fd338, %fd319;
	// inline asm
	mov.f64 	%fd323, 0d3EF3B20A75488A3F;
	// inline asm
	fma.rn.f64 	%fd320, %fd316, %fd338, %fd323;
	// inline asm
	mov.f64 	%fd327, 0d3F1745CDE4FAECD5;
	// inline asm
	fma.rn.f64 	%fd324, %fd320, %fd338, %fd327;
	// inline asm
	mov.f64 	%fd331, 0d3F3C71C7258A578B;
	// inline asm
	fma.rn.f64 	%fd328, %fd324, %fd338, %fd331;
	// inline asm
	mov.f64 	%fd335, 0d3F6249249242B910;
	// inline asm
	fma.rn.f64 	%fd332, %fd328, %fd338, %fd335;
	// inline asm
	mov.f64 	%fd339, 0d3F89999999999DFB;
	// inline asm
	fma.rn.f64 	%fd336, %fd332, %fd338, %fd339;
	// inline asm
	mul.rn.f64 	%fd403, %fd336, %fd338;
	sub.f64 	%fd404, %fd342, %fd390;
	mul.rn.f64 	%fd343, %fd301, %fd404;
	neg.f64 	%fd341, %fd390;
	// inline asm
	fma.rn.f64 	%fd340, %fd341, %fd342, %fd343;
	// inline asm
	mul.rn.f64 	%fd386, %fd401, %fd340;
	add.f64 	%fd406, %fd403, 0d3FB5555555555555;
	mov.f64 	%fd407, 0d3FB5555555555555;
	sub.f64 	%fd408, %fd407, %fd406;
	add.f64 	%fd409, %fd403, %fd408;
	add.f64 	%fd410, %fd409, 0d0000000000000000;
	add.f64 	%fd411, %fd410, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd353, %fd406, %fd411;
	sub.f64 	%fd412, %fd406, %fd353;
	add.f64 	%fd357, %fd411, %fd412;
	mul.rn.f64 	%fd413, %fd353, %fd390;
	neg.f64 	%fd347, %fd413;
	// inline asm
	fma.rn.f64 	%fd344, %fd353, %fd390, %fd347;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd348, %fd357, %fd386, %fd344;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd352, %fd353, %fd386, %fd348;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd356, %fd357, %fd390, %fd352;
	// inline asm
	add.f64 	%fd369, %fd413, %fd356;
	sub.f64 	%fd414, %fd413, %fd369;
	add.f64 	%fd373, %fd356, %fd414;
	mul.rn.f64 	%fd415, %fd369, %fd390;
	neg.f64 	%fd363, %fd415;
	// inline asm
	fma.rn.f64 	%fd360, %fd369, %fd390, %fd363;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd364, %fd373, %fd386, %fd360;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd368, %fd369, %fd386, %fd364;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd372, %fd373, %fd390, %fd368;
	// inline asm
	add.f64 	%fd385, %fd415, %fd372;
	sub.f64 	%fd416, %fd415, %fd385;
	add.f64 	%fd389, %fd372, %fd416;
	mul.rn.f64 	%fd417, %fd385, %fd390;
	neg.f64 	%fd379, %fd417;
	// inline asm
	fma.rn.f64 	%fd376, %fd385, %fd390, %fd379;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd380, %fd389, %fd386, %fd376;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd384, %fd385, %fd386, %fd380;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd388, %fd389, %fd390, %fd384;
	// inline asm
	add.f64 	%fd418, %fd417, %fd388;
	sub.f64 	%fd419, %fd417, %fd418;
	add.f64 	%fd420, %fd388, %fd419;
	add.f64 	%fd421, %fd390, %fd418;
	sub.f64 	%fd422, %fd390, %fd421;
	add.f64 	%fd423, %fd418, %fd422;
	add.f64 	%fd424, %fd420, %fd423;
	add.f64 	%fd425, %fd386, %fd424;
	add.f64 	%fd426, %fd421, %fd425;
	sub.f64 	%fd427, %fd421, %fd426;
	add.f64 	%fd428, %fd425, %fd427;
	cvt.rn.f64.s32	%fd429, %r130;
	mov.f64 	%fd430, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd431, %fd429, %fd430;
	mov.f64 	%fd432, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd433, %fd429, %fd432;
	add.f64 	%fd434, %fd431, %fd426;
	sub.f64 	%fd435, %fd431, %fd434;
	add.f64 	%fd436, %fd426, %fd435;
	add.f64 	%fd437, %fd428, %fd436;
	add.f64 	%fd438, %fd433, %fd437;
	add.f64 	%fd393, %fd434, %fd438;
	sub.f64 	%fd439, %fd434, %fd393;
	add.f64 	%fd397, %fd438, %fd439;
	mul.rn.f64 	%fd440, %fd393, %fd297;
	neg.f64 	%fd395, %fd440;
	// inline asm
	fma.rn.f64 	%fd392, %fd393, %fd297, %fd395;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd396, %fd397, %fd297, %fd392;
	// inline asm
	add.f64 	%fd49, %fd440, %fd396;
	sub.f64 	%fd441, %fd440, %fd49;
	add.f64 	%fd50, %fd396, %fd441;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd49;
	}
	mov.b32 	 %f1, %r31;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p54, %f2, 0f40874911;
	@%p54 bra 	BB0_57;
	bra.uni 	BB0_56;

BB0_57:
	mov.f64 	%fd445, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd446, %fd49, %fd445;
	mov.f64 	%fd447, 0d4338000000000000;
	add.rn.f64 	%fd448, %fd446, %fd447;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd448;
	}
	mov.f64 	%fd449, 0dC338000000000000;
	add.rn.f64 	%fd450, %fd448, %fd449;
	mov.f64 	%fd451, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd452, %fd450, %fd451, %fd49;
	mov.f64 	%fd453, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd454, %fd450, %fd453, %fd452;
	mov.f64 	%fd455, 0d3E928AF3FCA213EA;
	mov.f64 	%fd456, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd457, %fd456, %fd454, %fd455;
	mov.f64 	%fd458, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd459, %fd457, %fd454, %fd458;
	mov.f64 	%fd460, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd461, %fd459, %fd454, %fd460;
	mov.f64 	%fd462, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd463, %fd461, %fd454, %fd462;
	mov.f64 	%fd464, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd465, %fd463, %fd454, %fd464;
	mov.f64 	%fd466, 0d3F81111111122322;
	fma.rn.f64 	%fd467, %fd465, %fd454, %fd466;
	mov.f64 	%fd468, 0d3FA55555555502A1;
	fma.rn.f64 	%fd469, %fd467, %fd454, %fd468;
	mov.f64 	%fd470, 0d3FC5555555555511;
	fma.rn.f64 	%fd471, %fd469, %fd454, %fd470;
	mov.f64 	%fd472, 0d3FE000000000000B;
	fma.rn.f64 	%fd473, %fd471, %fd454, %fd472;
	mov.f64 	%fd474, 0d3FF0000000000000;
	fma.rn.f64 	%fd475, %fd473, %fd454, %fd474;
	fma.rn.f64 	%fd587, %fd475, %fd454, %fd474;
	abs.s32 	%r103, %r32;
	setp.lt.s32	%p57, %r103, 1023;
	@%p57 bra 	BB0_59;
	bra.uni 	BB0_58;

BB0_59:
	shl.b32 	%r109, %r32, 20;
	add.s32 	%r131, %r109, 1072693248;
	bra.uni 	BB0_60;

BB0_56:
	setp.lt.s32	%p55, %r31, 0;
	selp.f64	%fd442, 0d0000000000000000, 0d7FF0000000000000, %p55;
	abs.f64 	%fd443, %fd49;
	setp.gtu.f64	%p56, %fd443, 0d7FF0000000000000;
	add.f64 	%fd444, %fd49, %fd49;
	selp.f64	%fd590, %fd444, %fd442, %p56;
	bra.uni 	BB0_61;

BB0_58:
	add.s32 	%r104, %r32, 2046;
	shl.b32 	%r105, %r104, 19;
	and.b32  	%r106, %r105, -1048576;
	shl.b32 	%r107, %r104, 20;
	sub.s32 	%r131, %r107, %r106;
	mov.u32 	%r108, 0;
	mov.b64 	%fd476, {%r108, %r106};
	mul.f64 	%fd587, %fd587, %fd476;

BB0_60:
	mov.u32 	%r110, 0;
	mov.b64 	%fd477, {%r110, %r131};
	mul.f64 	%fd590, %fd587, %fd477;

BB0_61:
	abs.f64 	%fd478, %fd590;
	setp.eq.f64	%p58, %fd478, 0d7FF0000000000000;
	@%p58 bra 	BB0_63;

	// inline asm
	fma.rn.f64 	%fd590, %fd590, %fd50, %fd590;
	// inline asm

BB0_63:
	setp.neu.f64	%p59, %fd45, 0d3FF0000000000000;
	or.pred  	%p61, %p50, %p59;
	@%p61 bra 	BB0_70;

	mov.b64 	 %rd101, %fd590;
	xor.b64  	%rd102, %rd101, -9223372036854775808;
	mov.b64 	 %fd590, %rd102;

BB0_70:
	mul.f64 	%fd66, %fd583, %fd590;
	setp.lt.f64	%p65, %fd66, 0d0000000000000000;
	setp.gt.f64	%p66, %fd25, 0d0000000000000000;
	and.pred  	%p67, %p65, %p66;
	@%p67 bra 	BB0_72;

	setp.lt.f64	%p68, %fd25, 0d0000000000000000;
	setp.gt.f64	%p69, %fd66, 0d0000000000000000;
	and.pred  	%p70, %p68, %p69;
	@!%p70 bra 	BB0_80;
	bra.uni 	BB0_72;

BB0_72:
	neg.f64 	%fd67, %fd25;
	setp.eq.f64	%p71, %fd66, %fd67;
	mov.f64 	%fd591, 0d0000000000000000;
	@%p71 bra 	BB0_81;

	setp.eq.f64	%p72, %fd66, 0d0000000000000000;
	setp.eq.f64	%p73, %fd25, 0d8000000000000000;
	or.pred  	%p74, %p72, %p73;
	@%p74 bra 	BB0_80;

	add.f64 	%fd489, %fd25, %fd66;
	abs.f64 	%fd68, %fd489;
	abs.f64 	%fd490, %fd68;
	setp.geu.f64	%p75, %fd490, 0d7FF0000000000000;
	@%p75 bra 	BB0_80;

	abs.f64 	%fd69, %fd66;
	mul.f64 	%fd491, %fd69, 0d3D30000000000000;
	setp.gt.f64	%p76, %fd68, %fd491;
	@%p76 bra 	BB0_80;

	abs.f64 	%fd70, %fd67;
	mul.f64 	%fd492, %fd70, 0d3D30000000000000;
	setp.gt.f64	%p77, %fd68, %fd492;
	@%p77 bra 	BB0_80;

	mov.b64 	 %rd105, %fd68;
	setp.lt.s64	%p78, %rd105, 9007199254740992;
	setp.le.f64	%p79, %fd68, 0d001FFFFFFFFFFFFF;
	and.pred  	%p80, %p78, %p79;
	@!%p80 bra 	BB0_79;
	bra.uni 	BB0_78;

BB0_78:
	mov.b64 	 %rd106, %fd69;
	setp.lt.s64	%p81, %rd106, 9007199254740992;
	setp.le.f64	%p82, %fd69, 0d001FFFFFFFFFFFFF;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	BB0_99;
	bra.uni 	BB0_79;

BB0_99:
	mov.b64 	 %rd107, %fd70;
	setp.lt.s64	%p87, %rd107, 9007199254740992;
	setp.le.f64	%p88, %fd70, 0d001FFFFFFFFFFFFF;
	and.pred  	%p89, %p88, %p87;
	mul.f64 	%fd497, %fd69, 0d3CF0000000000000;
	setp.geu.f64	%p90, %fd68, %fd497;
	or.pred  	%p91, %p89, %p90;
	mul.f64 	%fd498, %fd70, 0d3CF0000000000000;
	setp.geu.f64	%p92, %fd68, %fd498;
	or.pred  	%p93, %p92, %p91;
	@!%p93 bra 	BB0_81;
	bra.uni 	BB0_80;

BB0_79:
	mul.f64 	%fd494, %fd69, 0d3CF0000000000000;
	setp.geu.f64	%p84, %fd68, %fd494;
	mul.f64 	%fd495, %fd70, 0d3CF0000000000000;
	setp.geu.f64	%p85, %fd68, %fd495;
	or.pred  	%p86, %p84, %p85;
	@%p86 bra 	BB0_80;
	bra.uni 	BB0_81;

BB0_80:
	add.f64 	%fd499, %fd25, %fd66;
	mul.f64 	%fd591, %fd499, 0d3FD45F306DC9C883;

BB0_81:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r112}, %fd591;
	}
	add.s32 	%r113, %r112, %r112;
	setp.lt.u32	%p94, %r113, -2038431743;
	@%p94 bra 	BB0_83;

	mov.f64 	%fd500, 0d0000000000000000;
	mul.rn.f64 	%fd591, %fd591, %fd500;

BB0_83:
	mov.f64 	%fd567, 0d0000000000000000;
	mov.f64 	%fd566, 0dBFC5555555555554;
	mov.f64 	%fd565, 0d3F81111111110818;
	mov.f64 	%fd564, 0dBF2A01A019DB62A1;
	mov.f64 	%fd563, 0d3EC71DE369ACE392;
	mov.f64 	%fd562, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd561, 0d3DE5DB65F9785EBA;
	mov.f64 	%fd560, 0dBFE0000000000000;
	mov.f64 	%fd559, 0d3FA5555555555551;
	mov.f64 	%fd558, 0dBF56C16C16C15D47;
	mov.f64 	%fd557, 0d3EFA01A019DDBCE9;
	mov.f64 	%fd556, 0dBE927E4F8E06E6D9;
	mov.f64 	%fd555, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd554, 0dBDA8FF8320FD8164;
	mov.f64 	%fd553, 0d400921FB54442D18;
	mov.f64 	%fd552, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r114}, %fd591;
	}
	add.s32 	%r115, %r114, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r116, %temp}, %fd591;
	}
	mov.b64 	%fd501, {%r116, %r115};
	cvt.rni.f64.f64	%fd502, %fd501;
	cvt.rzi.s64.f64	%rd108, %fd502;
	cvt.u32.u64	%r117, %rd108;
	neg.f64 	%fd503, %fd502;
	fma.rn.f64 	%fd505, %fd503, %fd552, %fd591;
	mul.f64 	%fd506, %fd505, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd508, %fd505, %fd553, %fd506;
	mul.rn.f64 	%fd509, %fd508, %fd508;
	fma.rn.f64 	%fd512, %fd554, %fd509, %fd555;
	fma.rn.f64 	%fd514, %fd512, %fd509, %fd556;
	fma.rn.f64 	%fd516, %fd514, %fd509, %fd557;
	fma.rn.f64 	%fd518, %fd516, %fd509, %fd558;
	fma.rn.f64 	%fd520, %fd518, %fd509, %fd559;
	fma.rn.f64 	%fd522, %fd520, %fd509, %fd560;
	mov.f64 	%fd523, 0d3FF0000000000000;
	fma.rn.f64 	%fd524, %fd522, %fd509, %fd523;
	fma.rn.f64 	%fd527, %fd561, %fd509, %fd562;
	fma.rn.f64 	%fd529, %fd527, %fd509, %fd563;
	fma.rn.f64 	%fd531, %fd529, %fd509, %fd564;
	fma.rn.f64 	%fd533, %fd531, %fd509, %fd565;
	fma.rn.f64 	%fd535, %fd533, %fd509, %fd566;
	fma.rn.f64 	%fd537, %fd535, %fd509, %fd567;
	fma.rn.f64 	%fd538, %fd537, %fd508, %fd508;
	and.b64  	%rd109, %rd108, 1;
	setp.eq.b64	%p95, %rd109, 1;
	not.pred 	%p96, %p95;
	selp.f64	%fd594, %fd538, %fd524, %p96;
	and.b32  	%r118, %r117, 2;
	setp.eq.s32	%p97, %r118, 0;
	@%p97 bra 	BB0_85;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r119}, %fd594;
	}
	xor.b32  	%r120, %r119, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r121, %temp}, %fd594;
	}
	mov.b64 	%fd594, {%r121, %r120};

BB0_85:
	cvt.rzi.f64.f64	%fd539, %fd591;
	setp.neu.f64	%p98, %fd591, %fd539;
	@%p98 bra 	BB0_87;

	mov.f64 	%fd540, 0d0000000000000000;
	mul.rn.f64 	%fd594, %fd591, %fd540;

BB0_87:
	setp.lt.f64	%p99, %fd9, 0d0000000000000000;
	setp.lt.f64	%p100, %fd594, 0d0000000000000000;
	and.pred  	%p101, %p100, %p99;
	@%p101 bra 	BB0_89;

	setp.gt.f64	%p102, %fd594, 0d0000000000000000;
	setp.gt.f64	%p103, %fd9, 0d0000000000000000;
	and.pred  	%p104, %p102, %p103;
	@!%p104 bra 	BB0_97;
	bra.uni 	BB0_89;

BB0_89:
	mov.f64 	%fd595, 0d0000000000000000;
	setp.eq.f64	%p105, %fd594, %fd9;
	@%p105 bra 	BB0_98;

	setp.eq.f64	%p106, %fd594, 0d0000000000000000;
	setp.eq.f64	%p107, %fd9, 0d0000000000000000;
	or.pred  	%p108, %p106, %p107;
	@%p108 bra 	BB0_97;

	sub.f64 	%fd542, %fd594, %fd9;
	abs.f64 	%fd80, %fd542;
	abs.f64 	%fd543, %fd80;
	setp.geu.f64	%p109, %fd543, 0d7FF0000000000000;
	@%p109 bra 	BB0_97;

	abs.f64 	%fd81, %fd594;
	mul.f64 	%fd544, %fd81, 0d3D30000000000000;
	setp.gt.f64	%p110, %fd80, %fd544;
	@%p110 bra 	BB0_97;

	abs.f64 	%fd82, %fd9;
	mul.f64 	%fd545, %fd82, 0d3D30000000000000;
	setp.gt.f64	%p111, %fd80, %fd545;
	@%p111 bra 	BB0_97;

	mov.b64 	 %rd110, %fd80;
	setp.lt.s64	%p112, %rd110, 9007199254740992;
	setp.le.f64	%p113, %fd80, 0d001FFFFFFFFFFFFF;
	and.pred  	%p114, %p112, %p113;
	@!%p114 bra 	BB0_96;
	bra.uni 	BB0_95;

BB0_95:
	mov.b64 	 %rd111, %fd81;
	setp.lt.s64	%p115, %rd111, 9007199254740992;
	setp.le.f64	%p116, %fd81, 0d001FFFFFFFFFFFFF;
	and.pred  	%p117, %p115, %p116;
	@%p117 bra 	BB0_100;
	bra.uni 	BB0_96;

BB0_100:
	mov.f64 	%fd595, 0d0000000000000000;
	mov.b64 	 %rd112, %fd82;
	setp.lt.s64	%p121, %rd112, 9007199254740992;
	setp.le.f64	%p122, %fd82, 0d001FFFFFFFFFFFFF;
	and.pred  	%p123, %p122, %p121;
	mul.f64 	%fd550, %fd81, 0d3CF0000000000000;
	setp.geu.f64	%p124, %fd80, %fd550;
	or.pred  	%p125, %p123, %p124;
	mul.f64 	%fd551, %fd82, 0d3CF0000000000000;
	setp.geu.f64	%p126, %fd80, %fd551;
	or.pred  	%p127, %p126, %p125;
	@!%p127 bra 	BB0_98;
	bra.uni 	BB0_97;

BB0_96:
	mov.f64 	%fd595, 0d0000000000000000;
	mul.f64 	%fd547, %fd81, 0d3CF0000000000000;
	setp.geu.f64	%p118, %fd80, %fd547;
	mul.f64 	%fd548, %fd82, 0d3CF0000000000000;
	setp.geu.f64	%p119, %fd80, %fd548;
	or.pred  	%p120, %p118, %p119;
	@%p120 bra 	BB0_97;
	bra.uni 	BB0_98;

BB0_97:
	sub.f64 	%fd595, %fd594, %fd9;

BB0_98:
	ld.param.u64 	%rd115, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0];
	add.s64 	%rd114, %rd115, %rd52;
	st.global.f64 	[%rd114], %fd595;
	ret;
}


  